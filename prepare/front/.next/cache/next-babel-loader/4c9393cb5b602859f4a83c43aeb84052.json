{"ast":null,"code":"import { takeLatest, call, put, delay } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from \"../reducers/post\"; // api\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n} // saga\n\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n} // watcher\n\n\nexport function* watchPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/sagas/post.js"],"names":["takeLatest","call","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostAPI","data","axios","post","addPost","action","id","shortId","generate","type","content","ADD_POST_TO_ME","err","console","error","response","watchPost"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,KAAhC,QAA6C,oBAA7C;AACA,SACIC,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,QAIO,kBAJP,C,CAMA;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH,C,CAED;;;AAEA,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMU,EAAE,GAAGC,OAAO,CAACC,QAAR,EAAX;AACA,UAAMb,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEX,gBADA;AAENG,MAAAA,IAAI,EAAE;AACFK,QAAAA,EADE;AAEFI,QAAAA,OAAO,EAAEL,MAAM,CAACJ;AAFd;AAFA,KAAD,CAAT;AAOA,UAAMN,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEE,cADA;AAENV,MAAAA,IAAI,EAAEK;AAFA,KAAD,CAAT;AAIH,GAfD,CAeE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMjB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEV,gBADA;AAENE,MAAAA,IAAI,EAAEW,GAAG,CAACG,QAAJ,CAAad;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAED;;;AAEA,OAAO,UAAUe,SAAV,GAAsB;AACzB,QAAMvB,UAAU,CAACI,gBAAD,EAAmBO,OAAnB,CAAhB;AACH","sourcesContent":["import { takeLatest, call, put, delay } from \"redux-saga/effects\";\nimport {\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_POST_FAILURE,\n} from \"../reducers/post\";\n\n// api\n\nfunction addPostAPI(data) {\n    return axios.post(\"/api/post\", data);\n}\n\n// saga\n\nfunction* addPost(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data);\n        yield delay(1000);\n        const id = shortId.generate();\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: {\n                id,\n                content: action.data,\n            },\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n            data: id,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.response.data,\n        });\n    }\n}\n\n// watcher\n\nexport function* watchPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n"]},"metadata":{},"sourceType":"module"}