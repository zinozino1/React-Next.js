{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createSagaMiddleware } from \"redux-saga\";\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run();\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","rootReducer","composeWithDevTools","createSagaMiddleware","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,YAArC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GACV,QACMR,OAAO,CAACC,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CADb,GAEMJ,mBAAmB,CAACF,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAH7B;AAIA,MAAME,KAAK,GAAGV,WAAW,CAACG,WAAD,EAAcM,QAAd,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,EAAjB;AACA,SAAOF,KAAP;AACH,CAVD;;AAYA,IAAMG,OAAO,GAAGd,aAAa,CAACO,cAAD,EAAiB;AAC1CQ,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createSagaMiddleware } from \"redux-saga\";\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares))\n            : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(rootReducer, enhancer);\n    store.sagaTask = sagaMiddleware.run();\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}