{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jinho/JS/NodeBird/prepare/front/components/main/home/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"CommentForm__FormWrapper\",\n  componentId: \"xt783t-0\"\n})([\"margin-bottom:30px;\"]);\n_c = FormWrapper;\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmit = useCallback(function (e) {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      onChange: onChangeCommentText,\n      value: commentText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        \"float\": \"right\"\n      },\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"E4uaGRuSXiN+xdqP3/pDf0rQD10=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c2 = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"CommentForm\");","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/components/main/home/CommentForm.jsx"],"names":["React","useCallback","Form","Input","Button","useInput","styled","PropTypes","useSelector","FormWrapper","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmit","e","console","log","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACJ,IAAD,CAAT;AAAA;AAAA;AAAA,2BAAjB;KAAMO,W;;AAIN,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAD8B,kBAGaP,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGvBW,WAHuB;AAAA,MAGVC,mBAHU;;AAK9B,MAAMC,QAAQ,GAAGjB,WAAW,CACxB,UAACkB,CAAD,EAAO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACH,GAHuB,EAIxB,CAACA,WAAD,CAJwB,CAA5B;AAOA,sBACI,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,QAAvB;AAAA,4BACI,QAAC,KAAD,CAAO,QAAP;AACI,MAAA,QAAQ,EAAED,mBADd;AAEI,MAAA,KAAK,EAAED;AAFX;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,KAAK,EAAE;AAAE,iBAAO;AAAT,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CAvBD;;GAAMN,W;UACSF,W,EAEgCH,Q;;;MAHzCK,W;AAyBNA,WAAW,CAACY,SAAZ,GAAwB;AACpBX,EAAAA,IAAI,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nconst FormWrapper = styled(Form)`\n    margin-bottom: 30px;\n`;\n\nconst CommentForm = ({ post }) => {\n    const id = useSelector((state) => state.user.me?.id);\n\n    const [commentText, onChangeCommentText] = useInput(\"\");\n\n    const onSubmit = useCallback(\n        (e) => {\n            console.log(post.id, commentText);\n        },\n        [commentText],\n    );\n\n    return (\n        <FormWrapper onFinish={onSubmit}>\n            <Input.TextArea\n                onChange={onChangeCommentText}\n                value={commentText}\n            ></Input.TextArea>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ float: \"right\" }}>\n                등록\n            </Button>\n        </FormWrapper>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}