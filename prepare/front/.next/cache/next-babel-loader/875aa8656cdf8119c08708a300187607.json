{"ast":null,"code":"import { takeLatest, call, put, delay } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from \"../reducers/post\"; // saga\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n} // watcher\n\n\nexport function* watchPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/sagas/post.js"],"names":["takeLatest","call","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","action","id","shortId","generate","type","data","content","ADD_POST_TO_ME","err","console","error","response","watchPost"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,KAAhC,QAA6C,oBAA7C;AACA,SACIC,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,QAIO,kBAJP,C,CAMA;;AAEA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMM,EAAE,GAAGC,OAAO,CAACC,QAAR,EAAX;AACA,UAAMT,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEP,gBADA;AAENQ,MAAAA,IAAI,EAAE;AACFJ,QAAAA,EADE;AAEFK,QAAAA,OAAO,EAAEN,MAAM,CAACK;AAFd;AAFA,KAAD,CAAT;AAOA,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEG,cADA;AAENF,MAAAA,IAAI,EAAEJ;AAFA,KAAD,CAAT;AAIH,GAfD,CAeE,OAAOO,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMd,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN,gBADA;AAENO,MAAAA,IAAI,EAAEG,GAAG,CAACG,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAED;;;AAEA,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAMpB,UAAU,CAACI,gBAAD,EAAmBG,OAAnB,CAAhB;AACH","sourcesContent":["import { takeLatest, call, put, delay } from \"redux-saga/effects\";\nimport {\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_POST_FAILURE,\n} from \"../reducers/post\";\n\n// saga\n\nfunction* addPost(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data);\n        yield delay(1000);\n        const id = shortId.generate();\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: {\n                id,\n                content: action.data,\n            },\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n            data: id,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.response.data,\n        });\n    }\n}\n\n// watcher\n\nexport function* watchPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n"]},"metadata":{},"sourceType":"module"}