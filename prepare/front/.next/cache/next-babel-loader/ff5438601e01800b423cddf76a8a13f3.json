{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jinho/JS/NodeBird/prepare/front/components/main/home/PostForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/useInput\";\nimport { addPostAction } from \"../../../reducers/post\";\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1b4glog-0\"\n})([\"padding:30px;\"]);\n_c = FormWrapper;\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1];\n\n  var onSubmit = useCallback(function () {\n    console.log(\"submit\");\n    dispatch(addPostAction());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmit,\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          \"float\": \"right\"\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"XHeQmTP/3WtT1nYkWpbsCNNdUuI=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c2 = PostForm;\nexport default PostForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"PostForm\");","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/components/main/home/PostForm.jsx"],"names":["React","useState","useCallback","useRef","Form","Input","Button","styled","useSelector","useDispatch","useInput","addPostAction","FormWrapper","PostForm","state","post","imagePaths","dispatch","imageInput","text","onChangeText","onSubmit","console","log","map","v","i","display","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAACH,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAjB;KAAMQ,W;;AAIN,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,qBACIL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADf;AAAA,MACXC,UADW,gBACXA,UADW;;AAEnB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,MAAMS,UAAU,GAAGf,MAAM,EAAzB;;AAJmB,kBAMUO,QAAQ,CAAC,EAAD,CANlB;AAAA;AAAA,MAMZS,IANY;AAAA,MAMNC,YANM;;AAQnB,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,YAAM;AAC/BoB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAN,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACH,GAH2B,EAGzB,CAACM,QAAD,CAHyB,CAA5B;AAKA,sBACI,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEI,QAAvB;AAAiC,IAAA,OAAO,EAAC,qBAAzC;AAAA,4BACI,QAAC,KAAD,CAAO,QAAP;AACI,MAAA,KAAK,EAAEF,IADX;AAEI,MAAA,QAAQ,EAAEC,YAFd;AAGI,MAAA,SAAS,EAAE,GAHf;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,aADJ,eAOI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,KAAK,EAAE;AAAE,mBAAO;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,eAkBI;AAAA,gBACKF,UAAU,CAACQ,GAAX,CAAe,UAACC,CAAD,EAAIC,CAAJ;AAAA,4BACZ;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAApB;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEF,CAAV;AAAa,YAAA,KAAK,EAAE;AAAEG,cAAAA,KAAK,EAAE;AAAT,aAApB;AAAwC,YAAA,GAAG,EAAEH;AAA7C;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA,mCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAf;AADL;AAAA;AAAA;AAAA;AAAA,aAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA+BH,CA5CD;;GAAMZ,Q;UACqBL,W,EACNC,W,EAIYC,Q;;;MAN3BG,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/useInput\";\nimport { addPostAction } from \"../../../reducers/post\";\n\nconst FormWrapper = styled(Form)`\n    padding: 30px;\n`;\n\nconst PostForm = () => {\n    const { imagePaths } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n\n    const imageInput = useRef();\n\n    const [text, onChangeText] = useInput(\"\");\n\n    const onSubmit = useCallback(() => {\n        console.log(\"submit\");\n        dispatch(addPostAction());\n    }, [dispatch]);\n\n    return (\n        <FormWrapper onFinish={onSubmit} encType=\"multipart/form-data\">\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            ></Input.TextArea>\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ float: \"right\" }}\n                >\n                    등록\n                </Button>\n            </div>\n            <div>\n                {imagePaths.map((v, i) => (\n                    <div key={v} style={{ display: \"inline-block\" }}>\n                        <img src={v} style={{ width: \"200px\" }} alt={v}></img>\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </FormWrapper>\n    );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}