{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createSagaMiddleware } from \"redux-saga\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","rootReducer","composeWithDevTools","createSagaMiddleware","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,YAArC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GACV,QACMP,OAAO,CAACC,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CADb,GAEMH,mBAAmB,CAACF,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAH7B;AAIA,QAAME,KAAK,GAAGT,WAAW,CAACG,WAAD,EAAcK,QAAd,CAAzB;AACA,SAAOC,KAAP;AACH,CARD;;AAUA,MAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createSagaMiddleware } from \"redux-saga\";\n\nconst configureStore = () => {\n    const middlewares = [];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares))\n            : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(rootReducer, enhancer);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}