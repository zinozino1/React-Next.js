{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\nvar initialState = {\n  user: {},\n  post: {}\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return action.payload;\n\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","state","action","type","console","log","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,aAAOA,MAAM,CAACI,OAAd;;AACJ;AAAS;AACL,YAAMC,eAAe,GAAGX,eAAe,CAAC;AACpCC,UAAAA,IAAI,EAAJA,IADoC;AAEpCC,UAAAA,IAAI,EAAJA;AAFoC,SAAD,CAAvC;AAIA,eAAOS,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;AACH;AAVL;AAYH,CAbD;;AAeA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\n\nconst initialState = {\n    user: {},\n    post: {},\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case HYDRATE:\n            console.log(\"HYDRATE\", action);\n            return action.payload;\n        default: {\n            const combinedReducer = combineReducers({\n                user,\n                post,\n            });\n            return combinedReducer(state, action);\n        }\n    }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}