{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jinho/JS/NodeBird/prepare/front/components/main/home/CommentForm.jsx\";\nimport React, { useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"CommentForm__FormWrapper\",\n  componentId: \"xt783t-0\"\n})([\"margin-bottom:30px;\"]);\n\nconst CommentForm = ({\n  post\n}) => {\n  const {\n    id\n  } = useSelector(state => state.user);\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const onSubmit = useCallback(e => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      onChange: onChangeCommentText,\n      value: commentText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        float: \"right\"\n      },\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/components/main/home/CommentForm.jsx"],"names":["React","useCallback","Form","Input","Button","useInput","styled","PropTypes","useSelector","FormWrapper","CommentForm","post","id","state","user","commentText","onChangeCommentText","onSubmit","e","console","log","float","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACJ,IAAD,CAAT;AAAA;AAAA;AAAA,2BAAjB;;AAIA,MAAMQ,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AAEA,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCX,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMY,QAAQ,GAAGhB,WAAW,CACvBiB,CAAD,IAAO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBG,WAArB;AACH,GAHuB,EAIxB,CAACA,WAAD,CAJwB,CAA5B;AAOA,sBACI,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,QAAvB;AAAA,4BACI,QAAC,KAAD,CAAO,QAAP;AACI,MAAA,QAAQ,EAAED,mBADd;AAEI,MAAA,KAAK,EAAED;AAFX;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvBD;;AAyBAX,WAAW,CAACY,SAAZ,GAAwB;AACpBX,EAAAA,IAAI,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nconst FormWrapper = styled(Form)`\n    margin-bottom: 30px;\n`;\n\nconst CommentForm = ({ post }) => {\n    const { id } = useSelector((state) => state.user);\n\n    const [commentText, onChangeCommentText] = useInput(\"\");\n\n    const onSubmit = useCallback(\n        (e) => {\n            console.log(post.id, commentText);\n        },\n        [commentText],\n    );\n\n    return (\n        <FormWrapper onFinish={onSubmit}>\n            <Input.TextArea\n                onChange={onChangeCommentText}\n                value={commentText}\n            ></Input.TextArea>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ float: \"right\" }}>\n                등록\n            </Button>\n        </FormWrapper>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}