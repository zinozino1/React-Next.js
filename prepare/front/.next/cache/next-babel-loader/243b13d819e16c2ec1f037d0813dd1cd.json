{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jinho/JS/NodeBird/prepare/front/components/main/home/PostCard.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PostCardContent from \"./PostCardContent\";\nconst CardWrapper = styled.div`\n    margin-bottom: 15px;\n`;\nconst CommentWrapper = styled.div`\n    padding: 0 20px;\n`;\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const onToggleLike = useCallback(() => {\n    setLiked(!liked);\n  }, [liked]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(!commentFormOpened);\n  }, [commentFormOpened]);\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avartar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 30\n        }, this),\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 34\n        }, this),\n        title: post.User.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(CommentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글이 있습니다.`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(PostCard);","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/components/main/home/PostCard.jsx"],"names":["React","useState","useCallback","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","CommentForm","useSelector","styled","PostCardContent","CardWrapper","div","CommentWrapper","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","me","state","user","id","onToggleLike","onToggleComment","Images","User","nickname","Comments","length","item","content","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport {\n    RetweetOutlined,\n    HeartOutlined,\n    MessageOutlined,\n    EllipsisOutlined,\n    HeartTwoTone,\n} from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PostCardContent from \"./PostCardContent\";\n\nconst CardWrapper = styled.div`\n    margin-bottom: 15px;\n`;\n\nconst CommentWrapper = styled.div`\n    padding: 0 20px;\n`;\n\nconst PostCard = ({ post }) => {\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const { me } = useSelector((state) => state.user);\n    const id = useSelector((state) => state.user.me && state.user.me.id);\n\n    const onToggleLike = useCallback(() => {\n        setLiked(!liked);\n    }, [liked]);\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened(!commentFormOpened);\n    }, [commentFormOpened]);\n\n    return (\n        <CardWrapper>\n            <Card\n                cover={\n                    post.Images[0] && (\n                        <PostImages images={post.Images}></PostImages>\n                    )\n                }\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked ? (\n                        <HeartTwoTone\n                            key=\"heart\"\n                            twoToneColor=\"#eb2f96\"\n                            onClick={onToggleLike}\n                        ></HeartTwoTone>\n                    ) : (\n                        <HeartOutlined\n                            key=\"heart\"\n                            onClick={onToggleLike}\n                        ></HeartOutlined>\n                    ),\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n                    <Popover\n                        key=\"more\"\n                        content={\n                            <Button.Group>\n                                {id && post.User.id === id ? (\n                                    <>\n                                        <Button type=\"primary\">수정</Button>\n                                        <Button type=\"danger\">삭제</Button>\n                                    </>\n                                ) : (\n                                    <Button>신고</Button>\n                                )}\n                            </Button.Group>\n                        }\n                    >\n                        <EllipsisOutlined></EllipsisOutlined>\n                    </Popover>,\n                ]}\n            >\n                <Card.Meta\n                    avartar={<Avatar>{post.User.nickname}</Avatar>}\n                    description={<PostCardContent></PostCardContent>}\n                    title={post.User.nickname}\n                ></Card.Meta>\n            </Card>\n            {commentFormOpened && (\n                <CommentWrapper>\n                    <CommentForm post={post} />\n                    <List\n                        header={`${post.Comments.length}개의 댓글이 있습니다.`}\n                        itemLayout=\"horizontal\"\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={\n                                        <Avatar>{item.User.nickname[0]}</Avatar>\n                                    }\n                                    content={item.content}\n                                ></Comment>\n                            </li>\n                        )}\n                    ></List>\n                </CommentWrapper>\n            )}\n        </CardWrapper>\n    );\n};\n\nexport default React.memo(PostCard);\n"]},"metadata":{},"sourceType":"module"}