{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, fork } from \"redux-saga/effects\";\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/sagas/index.js"],"names":["rootSaga","all","put","call","fork"],"mappings":";;oDAEUA,Q;;AAFV,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,oBAArC;;AAEA,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMC,GAAG,CAAC,EAAD,CAAT;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeD,QAAf","sourcesContent":["import { all, put, call, fork } from \"redux-saga/effects\";\n\nfunction* rootSaga() {\n    yield all([]);\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}