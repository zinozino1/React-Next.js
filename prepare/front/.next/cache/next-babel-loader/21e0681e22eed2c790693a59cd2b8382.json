{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({});\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jinho/JS/NodeBird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","rootReducer","state","action","type","console","log","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPW,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,OAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,aAAOA,MAAM,CAACI,OAAd;;AACJ;AAAS;AACL,cAAMC,eAAe,GAAGf,eAAe,CAAC,EAAD,CAAvC;AACA,eAAOe,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;AACH;AAPL;AASH,CAVD;;AAYA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n    user: {\n        isLoggedIn: false,\n        user: null,\n        signUpData: {},\n        loginData: {},\n    },\n    post: {\n        mainPosts: [],\n    },\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case HYDRATE:\n            console.log(\"HYDRATE\", action);\n            return action.payload;\n        default: {\n            const combinedReducer = combineReducers({});\n            return combinedReducer(state, action);\n        }\n    }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}